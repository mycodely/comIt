/*
Como el ejercicio anterior, pero ahora el endpoint recibe un parámetro opcional indice, si este parámetro
está definido, se le pasa el índice a la función emoji, de esa forma devuelve el emoji del
índice indicado, sino, sigue funcionando como antes.
*/

var http = require("http");
var host = "127.0.0.1";
var port = 3000;
var j = require('./emoji.json');
var fx = require('./fxemoji');
var URL = require('url');
var rutas = require('./array.js');

console.log(fx());

//var cambiado = (j.emoji).replace(/ /g, fx());

/* Utilizo indexOf para comparar el valor de ruta con un array
var valores = ["Vacío","",null,undefined];

if(valores.indexOf(store.nroLicencia.valor) > */


var server = http.createServer(function(req, res) {
    if (req.method !== "GET") {
        res.statusCode = 401
        res.end("Error: se esperaba una conexión GET\n")
    }

    var objetoUrl = URL.parse(req.url)
    if (objetoUrl.pathname === "/emoji") {
        var respuesta = JSON.stringify({ emoji: (j.emoji).replace(/ /g, fx())})
        res.statusCode = 200
        res.setHeader("Content-Type", "application/json")
        res.end(respuesta)
    } else if(objetoUrl.pathname === '/emoji/'.indexOf(rutas)){
        var respuesta = JSON.stringify({ emoji: (j.emoji).replace(/ /g, fx(objetoUrl.pathname))})
        res.statusCode = 200
        res.setHeader("Content-Type", "application/json")
        res.end(respuesta)
    } else{
        res.statusCode = 404
        res.end("Error: endpoint no encontrado\n")
    }
})

server.listen(port, host, function() {
    console.log(`Servidor escuchando en http://${host}:${port}/`)
})

